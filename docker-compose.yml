version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5

  topic-creator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c", "cub kafka-ready -b kafka:9092 1 20 && /usr/bin/kafka-topics --create --topic casino_events --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092 && /usr/bin/kafka-topics --create --topic casino_events_currency --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092 && /usr/bin/kafka-topics --create --topic casino_events_player --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092 && /usr/bin/kafka-topics --create --topic casino_events_description --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092"]

  generator:
    image: golang:1.17-alpine
    working_dir: /app
    command: ["go", "run", "internal/cmd/generator/main.go"]
    volumes:
      - ".:/app"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_OUTPUT_TOPIC=casino_events
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=myredispass
      - REDIS_DB=0
    depends_on:
      - database
      - kafka
      - topic-creator

  currency:
    image: golang:1.17-alpine
    working_dir: /app
    command: ["go", "run", "internal/cmd/currency/main.go"]
    volumes:
      - ".:/app"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_INPUT_TOPIC=casino_events
      - KAFKA_OUTPUT_TOPIC=casino_events_currency
      - EXCHANGE_RATE_API_URL=http://api.exchangerate.host/live
      - EXCHANGE_RATE_CACHE_DURATION=60 # in seconds
      - EXCHANGE_RATE_API_KEY=apikeyhere
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=myredispass
      - REDIS_DB=0
    depends_on:
      - kafka
      - topic-creator
      - generator
      - redis

  player:
    image: golang:1.17-alpine
    working_dir: /app
    command: ["go", "run", "internal/cmd/player/main.go"]
    volumes:
      - ".:/app"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_INPUT_TOPIC=casino_events_currency
      - KAFKA_OUTPUT_TOPIC=casino_events_player
      - PG_CONN_STR=postgres://casino:casino@database:5432/casino?sslmode=disable
    depends_on:
      - database
      - kafka
      - topic-creator
      - currency

  description:
    image: golang:1.17-alpine
    working_dir: /app
    command: ["go", "run", "internal/cmd/description/main.go"]
    volumes:
      - ".:/app"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_INPUT_TOPIC=casino_events_player
      - KAFKA_OUTPUT_TOPIC=casino_events_description
    depends_on:
      - database
      - kafka
      - topic-creator
      - player
  
  materialize:
    image: golang:1.17-alpine
    working_dir: /app
    command: ["go", "run", "internal/cmd/materialize/main.go"]
    volumes:
      - ".:/app"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_INPUT_TOPIC=casino_events_description
    depends_on:
      - kafka
      - topic-creator
      - description
    ports:
      - "8080:8080"

  database:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=casino
      - POSTGRES_PASSWORD=casino
    volumes:
      - "./db:/db"

  redis:
    image: redis:6.2-alpine
    command: ["redis-server", "--requirepass", "myredispass"]
    volumes:
      - redis-data:/data

volumes:
  redis-data: